name: Deployment pipeline

on:
  push:
    branches: 
      - main
  pull_request:
    branches: [main]    
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: npm install 
        run: npm install  
      - name: lint
        run: npm run eslint
      - name: build
        run: npm run build
      - name: test
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000
      - name: deploy
        if: ${{ github.event_name == 'push' }}
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "arcane-beach-43112"
          heroku_email: ${{secrets.APP_EMAIL}}
          healthcheck: "https://arcane-beach-43112.herokuapp.com/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: action-slack
        uses: 8398a7/action-slack@v3.9.3
        with:
          status: custom
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          custom_payload: |
              {
                attachments: [{
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                  fields: '{{ job.status}}' === 'success ? 'repo,message' : 'repo,message,commit,author,action,eventName,ref,workflow,job,took',
                }]
              }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
